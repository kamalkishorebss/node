var express = require('express');
var router = express.Router();
var passport = require('passport');
var LocalStrategy = require('passport-local').Strategy;
var usercontrool=require("../model/userschema");
var multer=require('multer');
var mime=require('mime-types');
var path =require("path");
var crypto=require('crypto');
var bcrypt = require('bcrypt-nodejs');
var nodemailer = require('nodemailer');
var transporter = nodemailer.createTransport('smtps://rohansunpreet@gmail.com:mangalsing@smtp.gmail.com');

console.log(transporter);
var storage=multer.diskStorage({
	destination:function(req,file,cb){
		cb(null,'./public/uploads')
	},
	filename:function(req,file,cb){
		console.log('file',file);
		cb(null,Date.now() + '.' +mime.extension(file.mimetype));
	}
})
var upload = multer({ storage: storage });

var isValidPassword = function(user, password){
  return bcrypt.compareSync(password, user.local.password);
}


var createHash = function(password){
 return bcrypt.hashSync(password, bcrypt.genSaltSync(10), null);
}


// /* GET home page. */
//  function ensureAuthenticated(req,res,next){     
// if (req.isAuthenticated()) {
//         next();   
//         }
     
// }

router.get('/loggedin', function(req, res) {
  res.send(req.isAuthenticated() ? req.user : '0');
});
router.get('/profile' ,function(req, res, next) {
	// console.log(req);
    res.send(req.user);

 });
//**********************************************
passport.use('local-signup', new LocalStrategy({
    passReqToCallback : true
  },
  function(req, username, password, done) {
    findOrCreateUser = function(){
      // find a user in Mongo with provided username
      usercontrool.findOne({'local.username':username},function(err, user) {

          var newUser = new usercontrool();
          newUser.local.username = username;
          newUser.local.password = createHash(password);
          newUser.local.email = req.body.email;
          newUser.local.name = req.body.name;
          newUser.local.gender = req.body.gender;
          newUser.local.file = req.file.filename;
          newUser.local.status =false;
          newUser.local.confirmation = makeid();
          var token='http://localhost:3002/users/verify_email/' + newUser.local.confirmation
          console.log('token'+token);
          // save the user
          newUser.save(function(err) {
            if (err){
              console.log('Error in Saving user: '+err);  
              throw err;  
            }
            else
            {
           
    var mailOptions = {
    from: 'Pappu', // sender address
    to: 'c.vicky1231990@gmail.com', // list of receivers
    subject: 'Hello âœ”', // Subject line
    text: 'tera meara<br><a href="http://localhost:3002/users/verify-email/' +newUser.local.confirmation+'">', // plaintext body
    html: 'Please confirm your registration here  <a href='+token+'>Link</a>' // html body
};
 transporter.sendMail(mailOptions, function(error, info){
    if(error){
        return console.log(error);
    }
    console.log('Message sent: ' + info.response);
});

            return done(null, newUser);
          }
          });
        });
    };
    // Delay the execution of findOrCreateUser and execute 
    // the method in the next tick of the event loop
   process.nextTick(findOrCreateUser);
  }));


//**************************///
passport.use('local-login',new LocalStrategy(function(username, password, done) {
    usercontrool.findOne({'local.username': username }, function(err, user) {
      if (err) { return done(err); }
      if (!user) {
        return done(null, false, { message: 'Incorrect username.' });
      }
      //if (user.local.password != password) {
      //   return done(null, false, { message: 'Incorrect password.' });
      // }
      if(!isValidPassword(user,password)){
        console.log("incorrect password");
         return done(null, false, { message: 'Incorrect password.' });
       }
      return done(null, user);
     // console.log(user)
    });
  }));

//passport serialize user for their session
passport.serializeUser(function(user, done) {
  done(null, user.id);
});
//passport deserialize user 
passport.deserializeUser(function(id, done) {
  usercontrool.findById(id, function(err, user) {
    done(err, user);
  });
});

router.post('/login', passport.authenticate('local-login'), function(req, res) {
	console.log(req.user);
  res.send(req.user);
});



router.get('/verify_email', function(req,res) {
    console.log('verify_email token: ',req.query.token);
usercontrool.findAndModify({'local.confirmation': req.query.token }, function(err,user) {
  if (err) { return console.error(err); }
     console.log(user);
     user.local.status=true;
     console.log(user.local.status);
          //var newuser = new Usermodel();
          // user.isAuthenticated = true;
           user.save(function (err) {
            if (err) return console.error(err);
            console.log('succesfully updated user');
            console.log(user);
            // sendgrid.send({
            //     to:       user.local.email,
            //     from:     'mangalhcl449@gmail.com',
            //     subject:  'Email confirmed!',
            //     html:     'Awesome! We can now send you kick-ass emails'
            //     }, function(err, json) {
            //         if (err) { return console.error(err); }
            //     console.log(json);
            // });
            res.send(user);
            //update page
        });
    });
});
    


router.get('/logout', function(req, res){
	req.logout();
	res.send(req.user)
	console.log("user is logout")
	// res.redirect('/login');
});



router.post('/signup',upload.single('file'), passport.authenticate('local-signup'), function(req, res) {
	console.log(req.user);
  res.send(req.user);
});


function makeid()
{
    var text = "";
    var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

    for( var i=0; i < 5; i++ )
        text += possible.charAt(Math.floor(Math.random() * possible.length));

    return text;
}


module.exports = router;
